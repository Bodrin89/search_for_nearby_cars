---
version : '3.9'

services:
  db:
    container_name: WelbeX_db
    image: postgres:15-alpine
    env_file:
      - .env_docker
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./WelbeX_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 3s
    networks:
      - WelbeX_network

  api:
    container_name: WelbeX_api
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env_docker
    ports:
      - 8000:8000
    volumes:
      - ./:/code
#    command: ["gunicorn", "config.wsgi", "-w", "4", "-b", "0.0.0.0:8000"]
    command: [python3, manage.py, runserver, 0.0.0.0:8000]

    networks:
      - WelbeX_network

  redis:
    container_name: WelbeX_redis
    image: redis
    restart: always
    env_file:
      - .env_docker
    ports:
      - 6379:6379

    networks:
      - WelbeX_network

  celery-worker:
    container_name: WelbeX_celery_worker
    build: .
    restart: always
    env_file:
      - .env_docker
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
      redis:
        condition: service_started
    command: celery -A config -l info > /var/log/worker.log 2>&1

  celery-beat:
    container_name: WelbeX_celery_beat
    build: .
    restart: always
    env_file:
      - .env_docker
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
      redis:
        condition: service_started
      celery-worker:
        condition: service_started
    command: celery -A config -l warning

networks:
  WelbeX_network:
    driver: bridge

volumes :
  WelbeX_pg_data:
